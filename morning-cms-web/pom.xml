<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>morning-cms-web</artifactId>
	<packaging>war</packaging>
	<parent>
		<groupId>org.pussinboots.morning</groupId>
		<artifactId>morning-parent</artifactId>
		<version>3.0.0-SNAPSHOT</version>
	</parent>
	<name>morning-cms-web Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<description>morning  --  公益商城系统:morning-cms  --  后台管理子系统</description>

	<dependencies>

        <!-- 3.SERVLET WEB begin√ -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId><!--j2ee web spec -->
            <version>${javax.servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>${javax.servlet.jsp-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>			  <!--JSTL标签类 -->
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId> <!--jackson json:高性能的JSON处理 -->
            <version>${jackson-databind.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>		  <!-- 格式化对象,方便输出日志 -->
            <version>${fastjson.version}</version>
        </dependency>
        <!-- SERVLET WEB end -->

        <!-- 4.MYBATIS 持久层框架 begin√ -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>		  <!-- mybatis持久层框架 -->
            <version>${mybatis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>	  <!-- mybatis-plus Mybatis增强辅助工具 -->
            <version>${mybatis-plus.version}</version>
        </dependency>
        <!-- MYBATIS 持久层框架 end -->

        <!-- 5.MYSQL 数据库相关依赖 begin -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId><!-- 导入Mysql数据库驱动包 -->
            <version>${mysql.driver.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>              <!-- connection pool:数据库连接池,用来在spingMVC-mybatis.xml中配置数据库 -->
            <version>${druid.version}</version>
        </dependency>
        <!-- MYSQL 数据库相关依赖 end -->

        <!-- 6.LOG 日志相关依赖 begin√ -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>			<!--核心log4j2jar包 -->
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>   <!-- 桥接：告诉Slf4j使用Log4j2 -->
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>  		<!-- 桥接：告诉commons logging使用Log4j2 -->
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>			<!-- slf4j -->
            <version>${slf4j.version}</version>
        </dependency>
        <!-- LOG 日志相关依赖 end -->

        <!-- 7.安全框架SECURITY:shiro begin -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 安全框架SECURITY:shiro end -->

        <!-- 8.缓存框架EHCACHE:ehcache begin -->
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
        </dependency>
        <!-- 缓存框架EHCACHE:ehcache end -->

        <!-- 缓存框架REDIS:redis begin -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring-data-redis.version}</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId> 					<!-- Java 客户端开发包 -->
            <version>${jedis.version}</version>
        </dependency>
        <!-- 缓存框架REDIS:redis end -->

        <!-- 9.分布式服务框架DUBBO:dubbo begin -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>${dubbo.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.101tec</groupId>
            <artifactId>zkclient</artifactId>
            <version>${zkclient.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 分布式服务框架DUBBO:dubbo ebd -->

        <!-- 10.其它组件: begin -->
        <!-- RESTful风格的Web服务框架SWAGGER2:swagger2 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger.version}</version>
        </dependency>

        <!-- 任务调度框架QUARTZ:Quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>

        <!-- 验证码工具KAPTCHA:kaptcha -->
        <dependency>
            <groupId>com.github.penggle</groupId>
            <artifactId>kaptcha</artifactId>
            <version>${kaptcha.version}</version>
        </dependency>

        <!-- 获取User Agent用户代理:解析客户端操作系统、浏览器等 -->
        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>${UserAgentUtils.version}</version>
        </dependency>

        <!-- 上传组件包 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>        <!-- Commons IO是针对开发IO流功能的工具类库. -->
            <version>${commons-io.version}</version>
        </dependency>

        <!-- RSA加密工具 -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>	   <!-- Bouncy Castle用于 Java 平台的开放源码的轻量级密码术包，它支持大量的密码术算法。 -->
            <version>${bcprov-jdk15on.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>	   <!-- Commons codec是项目中用来处理常用的编码方法的工具类包,例如DES、SHA1、MD5、Base64、URL、Soundx等等. -->
            <version>${commons-codec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>

        <!-- JAVA mail 邮件发送 -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <version>${javax.mail-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.5.6</version>
        </dependency>

        <!-- 使用Velocity 模板引擎快速生成代码 -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
        </dependency>

        <!-- 网页布局和修饰的框架包 -->
        <dependency>
            <groupId>org.sitemesh</groupId>
            <artifactId>sitemesh</artifactId>
            <version>${sitemesh.version}</version>
        </dependency>

        <!-- Commons项目中用来处理Java基本对象方法的工具类包√ -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>7.2.6</version>
        </dependency>

        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId> <!--jackson json:高性能的JSON处理 -->
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>		  <!-- 格式化对象,方便输出日志 -->
            <version>${fastjson.version}</version>
        </dependency>
		<!-- 0.Morning相关依赖 begin -->
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-administrator-facade</artifactId>
			<version>${morning.version}</version>
		</dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-system-facade</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-administrator-service</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-system-service</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-online-facade</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-online-service</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-product-facade</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-product-service</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-support-facade</artifactId>
			<version>${morning.version}</version>
        </dependency>
		<dependency>
			<groupId>org.pussinboots.morning</groupId>
			<artifactId>morning-support-service</artifactId>
			<version>${morning.version}</version>
        </dependency>

        <dependency>
            <groupId>org.pussinboots.morning</groupId>
            <artifactId>morning-order-facade</artifactId>
            <version>${morning.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pussinboots.morning</groupId>
            <artifactId>morning-order-service</artifactId>
            <version>${morning.version}</version>
        </dependency>

		<!-- Morning相关依赖 end -->

        <!-- 0.Morning相关依赖 begin -->
        <dependency>
            <groupId>org.pussinboots.morning</groupId>
            <artifactId>morning-common</artifactId>
            <version>${morning.version}</version>
          </dependency>


        <!-- 2.SPRING相关依赖 begin√ -->
        <!-- ①.spring核心依赖 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>	<!--包含Spring框架基本的核心工具类 -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>	<!--springIoC（依赖注入）的基础实现 -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>	<!--spring 提供在基础 IoC 功能上的扩展服务 -->
            <version>${spring.version}</version>
        </dependency>

        <!-- ②.spring 持久层依赖 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>		<!--封装了spring对于事物的控制 -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>	<!--包含对Spring对JDBC数据访问进行封装的所有类 -->
            <version>${spring.version}</version>
        </dependency>

        <!-- ③.spring web相关依赖 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>		<!--包含Web应用开发时,用到Spring框架时所需的核心类,包括自动载入 WebApplicationContext 特性的类、Struts与JSF集成类、文件上传的支持类、Filter类和大量工具辅助类 -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>	<!--Spring Web MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架 -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId> <!--提供对AspectJ的支持,以便可以方便的将面向方面的功能集成进IDE中 -->
            <version>${spring.version}</version>
        </dependency>
        <!-- ④.spring test依赖√ -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>	<!--与Junit单元测试、集成测试 -->
            <version>${spring.version}</version>
        </dependency>

        <!-- ⑤.spring 其它依赖 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>		<!--spring面向切面编程,提供AOP（面向切面编程） -->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- SPRING相关依赖 end -->

		<!-- 7.安全框架SECURITY:shiro begin -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 安全框架SECURITY:shiro end -->

		<!-- 8.缓存框架EHCACHE:ehcache begin -->
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<!-- 缓存框架EHCACHE:ehcache end -->

		<!-- 缓存框架REDIS:redis begin -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId> 					<!-- Java 客户端开发包 -->
		</dependency>
		<!-- 缓存框架REDIS:redis end -->

		<!-- 9.分布式服务框架DUBBO:dubbo begin -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 分布式服务框架DUBBO:dubbo ebd -->

		<!-- RESTful风格的Web服务框架SWAGGER2:swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId> <!--jackson json:高性能的JSON处理 -->
		</dependency>

		<!-- 验证码工具KAPTCHA:kaptcha -->
		<dependency>
			<groupId>com.github.penggle</groupId>
			<artifactId>kaptcha</artifactId>
		</dependency>

		<!-- 获取User Agent用户代理:解析客户端操作系统、浏览器等 -->
		<dependency>
			<groupId>eu.bitwalker</groupId>
			<artifactId>UserAgentUtils</artifactId>
		</dependency>

		<!-- 网页布局和修饰的框架包 -->
		<dependency>
			<groupId>org.sitemesh</groupId>
			<artifactId>sitemesh</artifactId>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>local</id><!-- 本地开发环境 -->
			<properties>
				<package.environment>local</package.environment>
			</properties>
			<activation><!-- 默认被激活 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev</id><!-- 开发测试环境 -->
			<properties>
				<package.environment>dev</package.environment>
			</properties>
		</profile>
		<profile>
			<id>product</id><!-- 线上生产环境 -->
			<properties>
				<package.environment>product</package.environment>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>profiles/local/*</exclude>
					<exclude>profiles/dev/*</exclude>
					<exclude>profiles/product/*</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<!-- 重点是这个配置 -->
						<warName>system.morning</warName>
						<webResources>
							<!-- 不同的环境，使用不同的配置文件 -->
							<resource>
								<directory>src/main/resources/profiles/${package.environment}</directory>
								<targetPath>WEB-INF/classes/properties</targetPath>
								<filtering>true</filtering>
							</resource>
						</webResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>